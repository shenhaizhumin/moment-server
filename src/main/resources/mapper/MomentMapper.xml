<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 这里填写对应的Dao文件所在的路径 -->
<mapper namespace="cn.example.moment.dao.MomentMapper">
    <sql id="table">moment</sql>

    <resultMap id="momentMap" type="cn.example.moment.pojo.MomentEntity">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="user_id" column="user_id"/>
        <result property="publish_time" column="publish_time"/>
        <result property="content_url" column="content_url"/>
        <collection property="collects" ofType="cn.example.moment.pojo.CollectEntity" javaType="java.util.List">
            <id property="id" column="collect_id"/>
            <result property="create_time" column="collect_create_time"/>
            <result property="moment_id" column="c_moment_id"/>
            <result property="operator_user_id" column="collect_operator_user_id"/>
            <association property="publisher" javaType="cn.example.moment.pojo.UserEntity">
                <id property="id" column="collect_u_id"/>
                <result property="nickname" column="collect_u_nickname"/>
                <result property="avatar_url" column="collect_u_avatar_url"/>
            </association>

        </collection>
        <collection property="comments" ofType="cn.example.moment.pojo.CommentEntity" javaType="java.util.List">
            <id property="id" column="comment_id"/>
            <result property="publish_time" column="comment_publish_time"/>
            <result property="moment_id" column="comment_moment_id"/>
            <result property="content" column="comment_content"/>
            <result property="operator_user_id" column="comment_operator_user_id"/>
            <association property="publisher" javaType="cn.example.moment.pojo.UserEntity">
                <id property="id" column="comment_u_id"/>
                <result property="nickname" column="comment_u_nickname"/>
                <result property="avatar_url" column="comment_u_avatar_url"/>
            </association>

        </collection>
        <collection property="storages" ofType="cn.example.moment.pojo.StorageEntity" javaType="java.util.List">
            <id property="id" column="storage_id"/>
            <result property="file_url" column="storage_file_url"/>
            <result property="moment_id" column="storage_moment_id"/>
        </collection>
        <!--<association property="type" javaType="cn.example.moment.pojo.CollectEntity">
            <id property="id" column="id"/>
            <result property="create_time" column="create_time"/>
            <result property="moment_id" column="moment_id"/>
            <result property="operator_user_id" column="operator_user_id"/>
        </association>-->
    </resultMap>
    <!--<resultMap id="collectMap" type="cn.example.moment.pojo.CollectEntity">
        <id property="id" column="id"/>
        <result property="create_time" column="create_time"/>
        <result property="moment_id" column="moment_id"/>
        <result property="operator_user_id" column="operator_user_id"/>
    </resultMap>-->

    <select id="getAllMoments" resultMap="momentMap">
        SELECT
        m.*,
        <!--点赞-->
        c.id collect_id,
        c.create_time collect_create_time,
        c.moment_id collect_moment_id,
        c.operator_user_id collect_operator_user_id,
        <!--点赞者-->
        collect_u.id collect_u_id,
        collect_u.nickname collect_u_nickname,
        collect_u.avatar_url collect_u_avatar_url,
        <!--评论-->
        co.id comment_id,
        co.publish_time comment_publish_time,
        co.moment_id comment_moment_id,
        co.content comment_content,
        co.operator_user_id comment_operator_user_id,
        <!--评论者-->
        comment_u.id comment_u_id,
        comment_u.nickname comment_u_nickname,
        comment_u.avatar_url comment_u_avatar_url,
        <!--关联到的文件-->
        storage.id storage_id,
        storage.file_url storage_file_url,
        storage.moment_id storage_moment_id
        FROM
        moment m
        left join collect c on c.moment_id=m.id
        left join account_info collect_u on c.operator_user_id=collect_u.id
        left join comment co on co.moment_id=m.id
        left join account_info comment_u on co.operator_user_id=comment_u.id
        left join file_entity storage on m.id=storage.moment_id
        order by m.publish_time desc
    </select>

    <insert id="insertMoment" useGeneratedKeys="true" keyProperty="id" parameterType="cn.example.moment.pojo.MomentEntity">
        insert into
        <include refid="table"/>
        (content,user_id,publish_time,content_url)
        values
        (#{content},#{user_id},#{publish_time,jdbcType = TIMESTAMP},#{content_url})
    </insert>

    <select id="getMomentById" parameterType="java.lang.Long" resultType="cn.example.moment.pojo.MomentEntity">
        select id from moment where id=(#{id})
    </select>
</mapper>